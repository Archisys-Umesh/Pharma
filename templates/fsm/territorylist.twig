{% extends "app.twig" %}

{% set formAction = request.getPath() ~ "?action=form&pk=" %}
{% if actionFunc %}
    {% set formAction = router.getPath(actionFunc,{id:''}) %}
{% endif %}    


{% block title %} {{title}} {% endblock %}
{% block page %}


    <div class="row">

        <div class="{% if listFilters %} col-sm-10 {% else %} col-sm-12 {% endif %}">
            <div class="card-box table-responsive">
                <div class="col-sm-12 p-0">
                    {% if disableAdd %}

                    {% else  %}
                        <div class="col-sm-2">
                            <a href="{{formAction}}0" data-toggle="ajaxModal" class="btn btn-success" id="btnAddPrimary"><i class="zmdi zmdi-plus"></i> Add {{form_name}}</a>
                        </div>
                    {% endif %}
                    {% if moreButtons %}

                        {% for title,path in moreButtons %}
                            {{ router.getPath(path[1]) }}
                            {# <div class="col-sm-2">  <!--change in col-sm 1 replace with 2-->
                                <a href="{{router.getPath(path[0])}}" data-toggle="{{path[1]}}" class="btn btn-success" id="configuration11"><i class="zmdi zmdi-plus"></i> {{title}}</a>
                            </div> #}
                            <div class="col-sm-2">
                                <button type="button" class="btn btn-primary" data-toggle="modal" id="configuration22" data-target="#exampleModalCenter">
                                    <i class="zmdi zmdi-plus"></i> Create OnBoard Window
                                </button>
                            </div>
                        {% endfor %}
                    {% endif %}
                    {% if downloadButtons %}
                        {% for title,path in downloadButtons %}
                            <div class="col-sm-2">
                                <a href="{{router.getPath(path[0])}}" class="btn btn-default" download><i class="zmdi zmdi-download"></i> {{title}}</a>
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
                <div class="clearfix p-b-10"></div>

                <table id="{{form_name|lower}}_datagrid" class="table  table-bordered dt-responsive nowrap buttonTable" cellspacing="0" width="100%">
                    <thead>
                    <tr>
                        <th data-orderable="false"><input type="checkbox" name="selectall" id="ckbCheckAll"></th>
                        {% for col,key in cols %}
                            <th>{{col}}</th>
                        {% endfor %}
                        <th>Action</th>
                    </tr>
                    </thead>

                </table>
            </div>
        </div><!-- end col -->
        {% if listFilters %}
            <div class="col-sm-2">
                <div class="card-box">
                    {% for filterName,filterOptions in listFilters %}
                        <div class="filterCollection">
                            <h5> {{filterName}} </h5>
                            <hr/>
                            {% for val,keys in filterOptions %}
                                <div class="radio">
                                    <input type="radio" name="{{filterName}}" id="{{keys}}" value="{{val}}" class="filterRadio">
                                    <label for="{{keys}}">
                                        {{keys}} <span></span>
                                    </label>
                                </div>
                            {%  endfor %}
                            <br/>
                        </div>
                    {%  endfor %}
                </div>
            </div>
        {% endif%}
    </div>
    <!-- Modal -->
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <form data-ride="ajaxModalForm" id="myForm" name="Add OnBoardWindow" data-validate="parsley" class="form-horizontal" role="form" action="{{request.getUri()}}" method="post">
                    <div class="modal-header">
                        <h4 class="modal-title" style="float:left">Add OnBoardWindow</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group row">
                            <label for="inputPassword" class="col-sm-3 col-form-label">On Boarding Status</label>
                            <div class="col-sm-9">
                                <select id="statusOn" class="form-control select2-offscreen" name="OnBoardingStatus" title="On Boarding Status">
                                    <option value="1">Disabled</option>
                                    <option value="2">Only Add</option>
                                    <option value="3">Only Edit</option>
                                    <option value="4">Only Delete</option>
                                    <option value="5">Full OnBoard</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="inputPassword" class="col-sm-3 col-form-label">Start Date</label>
                            <div class="col-sm-9">
                                <input type="text" name="StartDate" id="startDate" direction="range" class="datepicker form-control" dmin="0D" autocomplete="off" readonly="readonly" required="" placeholder="Start Date">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="inputPassword" class="col-sm-3 col-form-label">End Date</label>
                            <div class="col-sm-9">
                                <input type="text" name="EndDate" id="endDate" direction="range" class="datepicker form-control" dmin="0D" autocomplete="off" readonly="readonly" required="" placeholder="End Date">
                            </div>
                        </div>
                        <input type="hidden" id="TerritoryArrayAppend" class="TerritoryTest" name="TerritoryId">
                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn btn-white" data-dismiss="modal">Close</a>
                        <button id="saveuser" name="buttonValue" value="save" type="submit" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

{% endblock %}
{% block script %}
    <script type="text/javascript">

        $( "#startDate" ).datepicker({ dateFormat: 'dd/mm/yy',defaultDate: new Date(), minDate: 0});
        $( "#endDate" ).datepicker({dateFormat: 'dd/mm/yy', defaultDate: new Date(), minDate: 0 });

        var $id_fields = {% if id_fields %} {{ id_fields|json_encode|raw }} {% else %} [] {% endif %};

        ${{form_name|lower}}_datagrid = "";
        $valKeys = [];
        {% if valKeys %}
        {% for val,keys in valKeys %}
        {% if val == 0 %}
        $valKeys[1] = 'Disabled';
        {% else %}
        $valKeys['{{val}}'] = {{keys|json_encode|raw}};
        {% endif%}
        {% endfor %}
        {% endif%}

        $dateFields = [];
        {% if dateFields %}
        $dateFields = {{dateFields|json_encode|raw}};
        {% endif%}

        $DataTableUrl = "{{request.getPath()}}?action=list&";
        $filter = "";

        function setFiltersValues()
        {
            $filter = "";
            $filterOptions = $('.filterRadio:checked');
            for($i = 0 ; $i < $filterOptions.length ; $i++)
            {
                $filter = $filter+ $($filterOptions[$i]).attr("name") + "=" + $($filterOptions[$i]).val()+"&";
            }
        }

        function setFirstSelectedFilters()
        {
            $filterCollection = $('.filterCollection');
            for($i = 0 ; $i < $filterCollection.length ; $i++)
            {
                $first = $($filterCollection[$i]).find("input:radio").first();
                $($first).prop("checked","checked");
            }
        }

        function fetchDataFromBack(key, values) {
            var returnValues = '';
            $.ajax({
                async: false,
                type: "POST",
                url: "{{ router.getPath('sys_table_data') }}",
                data: {
                    key: key,
                    values, values
                },
                dataType: "json",
                success: function(response) {
                    returnValues = response.value;
                }
            });

            return returnValues;
        }

        function checkIfFilterChangeFromBack(filter) {
            let newFilter = setFiltersValues();
            if(filter != newFilter) {
                showLoader();
                ${{form_name|lower}}_datagrid.ajax.url( $DataTableUrl + $filter ).load();
            }
        }

        $(document).ready(function(){
            $(".filterRadio").change(function(){
                setFiltersValues();
                showLoader();
                ${{form_name|lower}}_datagrid.ajax.url( $DataTableUrl + $filter ).load();
            });

            setFirstSelectedFilters();
            setFiltersValues();

            setTimeout(function(){
                checkIfFilterChangeFromBack($filter);
            },100);

            ${{form_name|lower}}_datagrid = $('#{{form_name|lower}}_datagrid').DataTable({
                processing: true,
                serverSide: true,
                lengthMenu: [
                    [10, 20, 50,100,500,1000],
                    [10, 20, 50,100,500,1000]
                ],
                pageLength: 10,
                aoColumnDefs: [
                    {
                        bSortable: false,
                        aTargets: [ -1 ]
                    }],
                ajax: {
                    "url" : $DataTableUrl + $filter,
                    "complete" : function(d)
                    {
                        $('.filterRadio:checked').parent().find("span").html("(" + d.responseJSON.data.length + ")");
                        hideLoader();
                    }
                },
                {% if defaultOrderIdx%}
                "order": [[ {{defaultOrderIdx}}, "desc" ]],
                {% else %}
                "order": [[ 0, "desc" ]],
                {% endif %}

                "columns": [
                    { "data" : "{{pk}}" , render: function ( data, type, row ) {
                            $checkbox = "<input class='checkBoxClass' id='checkButton' type='checkbox' name='TerritoryId' value="+row.{{pk}}+">";
                            return $checkbox;
                        }},
                    {% for col,key in cols %}
                    { "data" : "{{key}}" ,render: function ( data, type, row ) {
                            try {
                                if(row.{{key}} == 0){
                                    return replacements("{{key}}",{{1}});
                                }else{
                                    return replacements("{{key}}",row.{{key}});
                                }
                            }
                            catch(err) {
                                console.log(err);
                                return "";
                            }
                        }},
                    {% endfor %}
                    { "data" : "{{pk}}" ,render: function ( data, type, row ) {
                            $str = "";
                            if(canEdit(row)) {
                                $str = $str + "<a onclick='return loadModalURL(this)' title='Edit' class='btn btn-danger btn-xs' href='#' remote='{{formAction}}"+row.{{pk}}+"'><i class='zmdi zmdi-edit'></i></a>";

                            }
                            {% if singleFunc %}
                            $str = $str + " <a class= 'singleView' href='{{router.getPath(singleFunc,{id:""})}}"+row.{{pk}}+"'><i class='fa fa-eye'></i></a>";
                            {% endif%}
                            {% if rowButtons %}
                            {% for path,icon in rowButtons %}
                            {% if 'ajaxModal' in icon %}
                            $str = $str + " <a onclick='return loadModalURL(this)' 'title='Manage' class='btn btn-default btn-xs'  href='#' remote='{{router.getPath(path,{id:""})}}"+row.{{pk}}+"'><i class='{{icon}}'></i></a>";
                            {% else %}
                            $str = $str + " <a href='{{router.getPath(path,{id:""})}}"+row.{{pk}}+"'title='Manage' class='btn btn-default btn-xs'><i class='{{icon}}'></i></a>";
                            {% endif %}
                            {% endfor %}
                            {% endif%}
                            return $str;
                        }}
                ],
                {% if colorRows %}
                "fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {
                    {% for col,keys in colorRows %}
                    if(aData.TripStatus == {{col}}){
                        $('td', nRow).css('background-color', {{keys|json_encode|raw}});
                    }
                    {%endfor%}
                },
                {% endif %}
                "fnDrawCallback": function(settings, json) {

                    $("#{{form_name|lower}}_datagrid tr").click(function(){
                        clickrow(this);
                    });

                },
                dom: "lBfrtip",
                buttons: [{
                    extend: "copy",
                    className: "btn-sm"
                }, {
                    extend: "csv",
                    className: "btn-sm"
                }, {
                    extend: "excel",
                    className: "btn-sm"
                }, {
                    extend: "pdf",
                    className: "btn-sm"
                }, {
                    extend: "print",
                    className: "btn-sm"
                }],
                responsive: !0,

            });

            // $('#configuration').css('display','none')
            // $('.checkBoxClass').change(function(){
            //     alert('alert');
            //     if ($(this).is(':checked')) {
            //         $('#configuration').css('display','block')
            //     }else{
            //         $('#configuration').css('display','none')
            //     }
            // });

            $('#configuration22').click(() => {
                showLoader();
                $("#exampleModalCenter").hide();
                const ids = $(':checkbox:checked').map((i, el) => $(el).val()).get();
                if (ids.length > 0) {
                    hideLoader();
                    $("#exampleModalCenter").show();
                    $('#TerritoryArrayAppend').val(ids);
                    {# $.ajax({
                        url: '{{ router.getPath('fsm_getSelectedTerritories') }}',
                        type: 'post',
                        data: { selectedTerritories: ids },
                        success: (result) => {
                            hideLoader();
                            if (result.length > 0) {                               
                                $("#exampleModalCenter").show();
                                $('#TerritoryArrayAppend').val(result);
                            } else {
                                $("#exampleModalCenter").hide();
                                toastr["error"]("No Territories selected!");
                                location.reload();
                            }
                        },
                        error: (jqXHR, textStatus, errorThrown) => {
                            // Handle error
                            hideLoader();
                            toastr["error"]("An error occurred. Please try again.");
                        }
                    }); #}
                } else {
                    hideLoader();
                    toastr["warning"]("Please select at least one territory!!");
                    location.reload();
                }
            });

            $("#myForm").submit(function(event) {
                event.preventDefault();
                showLoader();
                $("#exampleModalCenter").hide();
                var formData = $(this).serialize();
                var sdate = $('#startDate').val();
                var edate = $('#endDate').val();
                let splitsdate = sdate.split('/');
                let splitedate = edate.split('/');
                let startDateObj = new Date(splitsdate[2], splitsdate[1] - 1, splitsdate[0]);
                let endDateObj = new Date(splitedate[2], splitedate[1] - 1, splitedate[0]);

                let OnBoardingStatus = formData.split('&');
                let OnBoardingStatusValue = OnBoardingStatus[0].split('=');

                if(!sdate && !edate && OnBoardingStatusValue['1'] !=1){
                    toastr["warning"]("Please select a start and end date!");
                    location.reload();
                    return false;
                }

                {# if(sdate > edate)
                {
                toastr["warning"]("Start date needs to be earlier");
                location.reload();
                 return false;
                }             #}

                if (startDateObj > endDateObj) {
                    toastr["warning"]("Start date needs to be earlier");
                    location.reload();
                    return false;
                }
                $.ajax({
                    url: '{{ router.getPath('fsm_onBoardWindow') }}',
                    data: "formData="+formData,
                    type: 'post',
                    success: function(result,status,jqXHR )
                    {
                        if(status == 'success' ){
                            hideLoader();
                            toastr["success"]("Successfully updated onboard window.");
                            location.reload();
                        }
                    },
                    error(jqXHR, textStatus, errorThrown){
                        //Do something
                    }
                });
            });

            {# $('#configuration_1').click(function()
            {
                showLoader();
                $("#ajaxModal").hide();
                var ids = [];
                $(':checkbox:checked').each(function(i){
                    ids[i] = $(this).val();
                });
                if(ids.length > 0){
                    $.ajax({
                        url: '{{ router.getPath('fsm_getSelectedTerritories') }}',
                        data: "selectedTerritories="+ids,
                        type: 'post',
                        success: function(result,status,jqXHR )
                        {
                        if(result.length > 0){
                            console.log(result.length);
                            hideLoader();
                        $("#ajaxModal").show();
                        $('#TerritoryArrayAppend').val(result);
                        }
                        else{
                            hideLoader();
                            $("#ajaxModal").hide();
                            toastr["error"]("No Territories selected!");
                            location.reload();
                        }
                        },
                        error(jqXHR, textStatus, errorThrown){
                            //Do something
                        }
                    });
                }
                else{
                    toastr["warning"]("Please select any one territory !");
                    location.reload();
                }

            }); #}



            $("#ckbCheckAll").click(function () {
                $(".checkBoxClass").prop('checked', $(this).prop('checked'));
            });

        });

        function loadGrid()
        {
            showLoader();
            ${{form_name|lower}}_datagrid.ajax.reload();
        }

        function replacements($key,$val)
        {
            if($valKeys[$key] != undefined)
            {
                return $valKeys[$key][$val];
            }
            else if($key == "{{mediaCol}}")
            {
                $mediaList = ($val+"").split(',');
                $str = "";
                for($i = 0;$i < $mediaList.length; $i++)
                {
                    if($i == 0) {
                        $str = $str + "<img src='{{router.getPath('media')}}?id="+$mediaList[$i]+"&w=100' class='datatableIcons'/> ";
                        if($mediaList.length > 1)
                        {
                            $str = $str+"<hr/>";
                        }
                    }
                    else {
                        $str = $str + "<img src='{{router.getPath('media')}}?id="+$mediaList[$i]+"&w=50' class='datatableIcons'/> ";
                    }
                }
                return $str;
            }
            else if($dateFields.indexOf($key) > -1) // is Datetime
            {
                return propelDate($val,0);
                /*$d = new Date($val);
                return $d.toLocaleString();
                */
            }
            else if($id_fields.includes($key)) {
                return fetchDataFromBack($key, $val);
            }
            else {
                return $val;
            }
        }
        function canEdit($row){
            {% if canEditIf %}
            return findinString($row.{{canEditIf.col}},"{{canEditIf.val}}");
            {% elseif disableEdit %}
            return false;
            {% else%}
            return true;
            {% endif%}

        }
        function clickrow(row)
        {
            {% if singleFunc %}
            $(row).find(".singleView")[0].click();
            {% endif%}
            return false;
        }

    </script>


    {% if singleFunc %}

        <style>
            #{{form_name|lower}}_datagrid tr {cursor: pointer;}
        </style>

    {% endif%}

{% endblock %}
